name: OpenAPI SDK Generation

on:
  push:
    branches:
      - main
    paths:
      - 'apps/api/src/docs/**'
      - 'apps/api/src/**/*.ts'
      - '.github/workflows/openapi-sdk.yml'
  pull_request:
    paths:
      - 'apps/api/src/docs/**'
      - 'apps/api/src/**/*.ts'
  workflow_dispatch:

jobs:
  validate-openapi:
    name: Validate OpenAPI Spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd apps/api
          npm ci

      - name: Generate OpenAPI spec
        run: |
          cd apps/api
          npm run build
          node -e "
            const { setupOpenAPI } = require('./dist/docs/openapi');
            const { NestFactory } = require('@nestjs/core');
            const { AppModule } = require('./dist/app.module');
            (async () => {
              const app = await NestFactory.create(AppModule, { logger: false });
              setupOpenAPI(app);
              await app.init();
              await app.close();
            })();
          "

      - name: Validate OpenAPI spec
        uses: char0n/swagger-editor-validate@v1
        with:
          definition-file: apps/api/openapi.json

      - name: Check for breaking changes
        uses: oasdiff/oasdiff-action/breaking@main
        with:
          base: https://api.frigate.ai/openapi.json
          revision: apps/api/openapi.json
          fail-on-diff: false

  generate-typescript-sdk:
    name: Generate TypeScript SDK
    needs: validate-openapi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install SDK dependencies
        run: |
          cd sdks/typescript
          npm ci

      - name: Generate SDK from OpenAPI spec
        run: |
          cd sdks/typescript
          npm run generate:remote

      - name: Build SDK
        run: |
          cd sdks/typescript
          npm run build

      - name: Run tests
        run: |
          cd sdks/typescript
          npm test

      - name: Upload SDK artifact
        uses: actions/upload-artifact@v4
        with:
          name: typescript-sdk
          path: sdks/typescript/dist

  contract-tests:
    name: OpenAPI Contract Tests
    needs: validate-openapi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd apps/api
          npm ci

      - name: Run contract tests
        run: |
          cd apps/api
          npm test -- openapi-contract.spec.ts

      - name: Test sanitization
        run: |
          cd apps/api
          npm test -- sanitize-openapi.spec.ts

  publish-sdk:
    name: Publish TypeScript SDK
    needs: [validate-openapi, generate-typescript-sdk, contract-tests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Download SDK artifact
        uses: actions/download-artifact@v4
        with:
          name: typescript-sdk
          path: sdks/typescript/dist

      - name: Publish to npm
        run: |
          cd sdks/typescript
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: sdk-v${{ github.run_number }}
          release_name: TypeScript SDK v${{ github.run_number }}
          body: |
            Automated SDK release from OpenAPI specification.
            
            Install: `npm install @frigate/typescript-sdk@latest`
          draft: false
          prerelease: false
