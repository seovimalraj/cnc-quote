apps/web/app/portal/quotes/page.tsx:235:  const handleExportCSV = async () => {
apps/web/app/portal/quotes/page.tsx:288:                onClick={handleExportCSV}
apps/web/app/portal/quotes/page.tsx:292:                <span>Export CSV</span>
apps/web/app/portal/documents/DocumentsClient.tsx:264:      const response = await fetch(`/api/documents/export.csv?${params}`);
apps/web/app/portal/documents/DocumentsClient.tsx:270:      a.download = 'documents-export.csv';
apps/web/app/portal/documents/DocumentsClient.tsx:347:          Export CSV
apps/web/app/portal/orders/page.tsx:159:  const handleExportCSV = async () => {
apps/web/app/portal/orders/page.tsx:170:      const response = await fetch(`/api/orders/export.csv?${params}`);
apps/web/app/portal/orders/page.tsx:176:      a.download = 'orders-export.csv';
apps/web/app/portal/orders/page.tsx:234:        <Button onClick={handleExportCSV} variant="outline">
apps/web/app/portal/orders/page.tsx:236:          Export CSV
apps/web/lib/api/useQuotes.ts:187: * Export margins as CSV
apps/web/lib/api/useQuotes.ts:189:export function useExportMarginsCsv() {
apps/web/lib/api/useQuotes.ts:196:    }) => quotesApi.exportMarginsCsv(filters),
apps/web/lib/api/quotes.ts:204:   * Export margins as CSV (returns blob for download)
apps/web/lib/api/quotes.ts:206:  async exportMarginsCsv(filters?: {
apps/web/lib/api/quotes.ts:225:      `${this.baseUrl}/quotes/export/margins.csv${query ? `?${query}` : ''}`,
apps/web/components/revisions/CompareView.tsx:29:  const handleExportCsv = () => {
apps/web/components/revisions/CompareView.tsx:64:                onClick={handleExportCsv}
apps/web/components/revisions/CompareView.tsx:68:                Export CSV
apps/web/src/components/quotes/MarginDrawer.tsx:9:import { useMargins, useExportMarginsCsv } from '@/lib/api/useQuotes';
apps/web/src/components/quotes/MarginDrawer.tsx:28:  const exportCsv = useExportMarginsCsv();
apps/web/src/components/quotes/MarginDrawer.tsx:31:    exportCsv.mutate({});
apps/web/src/components/quotes/MarginDrawer.tsx:55:                  disabled={exportCsv.isPending}
apps/web/src/components/quotes/MarginDrawer.tsx:59:                  Export CSV
apps/web/src/components/revisions/CompareView.tsx:37:  const exportToCsv = () => {
apps/web/src/components/revisions/CompareView.tsx:109:                      onClick={exportToCsv}
apps/web/src/components/revisions/CompareView.tsx:113:                      <span>Export CSV</span>
apps/web/src/components/instant-quote/QuoteSummaryPanel.tsx:136:            Export CSV
apps/web/src/components/admin/AbandonedFilters.tsx:22:      const response = await fetch('/api/admin/abandoned/export.csv')
apps/web/src/components/admin/AbandonedFilters.tsx:131:              Export CSV
packages/shared/src/contracts/v1/realtime-events.ts:24:export interface GeometryMetricsV1 {
packages/shared/src/contracts/v1/part-config.ts:15:export interface GeometryMetricsV1 {
apps/api/src/quotes/export/export.controller.ts:31:   * Export margins as CSV
apps/api/src/quotes/export/export.controller.ts:35:  @ApiOperation({ summary: 'Export quote margins as CSV' })
apps/api/src/quotes/export/export.controller.ts:42:  async exportMarginsCSV(
apps/api/src/modules/admin-dfm/admin-dfm.controller.ts:375:  @ApiOperation({ summary: 'Export DFM requests to CSV' })
apps/api/src/modules/review/review.controller.ts:119:  @Get('export.csv')
apps/api/src/modules/admin-settings/admin-settings.service.ts:114:  async exportAuditEvents(filters: typeof this.getAuditEvents extends (f: infer T) => any ? T : never, format: 'csv' | 'jsonl'): Promise<string> {
apps/api/src/modules/admin-settings/admin-settings.service.ts:118:      return this.convertToCSV(events);
apps/api/src/modules/admin-settings/admin-settings.service.ts:124:  private convertToCSV(events: AuditLogEvent[]): string {
