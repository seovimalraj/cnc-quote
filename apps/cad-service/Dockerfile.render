FROM python:3.11-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    build-essential \
    cmake \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libxrender1 \
    libxft2 \
    libxinerama1 \
    libxcursor1 \
    libxi6 \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Install OpenCASCADE from conda-forge
RUN wget https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh && \
    bash Mambaforge-Linux-x86_64.sh -b -p /opt/conda && \
    rm Mambaforge-Linux-x86_64.sh

ENV PATH="/opt/conda/bin:$PATH"

# Install pythonocc dependencies
RUN mamba install -y -c conda-forge pythonocc-core=7.7.0 occt=7.7.2

# Install poetry
RUN curl -sSL https://install.python-poetry.org | python3 -
ENV PATH="/root/.local/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy project files
COPY apps/cad-service/pyproject.toml ./

# Install dependencies
RUN poetry config virtualenvs.create false \
    && poetry install --no-dev --no-interaction --no-ansi \
    && poetry export -f requirements.txt --output requirements.txt

# Copy application code
COPY apps/cad-service/app ./app
COPY apps/cad-service/main.py .

# Production stage
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libxrender1 \
    libxft2 \
    libxinerama1 \
    libxcursor1 \
    libxi6 \
    && rm -rf /var/lib/apt/lists/*

# Copy conda environment and requirements
COPY --from=builder /opt/conda /opt/conda
COPY --from=builder /app/requirements.txt /app/requirements.txt

# Set up environment
ENV PATH="/opt/conda/bin:$PATH"
ENV PYTHONPATH="/opt/conda/lib/python3.11/site-packages:/app"
ENV LD_LIBRARY_PATH="/opt/conda/lib"

# Install Python dependencies
RUN pip install -r /app/requirements.txt
COPY --from=builder /opt/conda /opt/conda
COPY --from=builder /app /app

WORKDIR /app

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libglu1-mesa \
    libxrender1 \
    libxft2 \
    libxinerama1 \
    libxcursor1 \
    libxi6 \
    && rm -rf /var/lib/apt/lists/*

# Set up conda environment
ENV PATH="/opt/conda/bin:$PATH"
ENV LD_LIBRARY_PATH="/opt/conda/lib:$LD_LIBRARY_PATH"

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PORT=10001

# Expose the port
EXPOSE ${PORT}

# Create a non-root user
RUN useradd -m -r worker && chown -R worker:worker /app
USER worker

# Set the command to run the application
CMD ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "10001"]
