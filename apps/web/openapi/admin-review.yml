openapi: 3.1.0
info:
  title: Admin Review API
  version: '1.0.0'
servers:
  - url: https://api.cnc-quote.local
paths:
  /api/admin/review:
    get:
      summary: List review queue
      operationId: listAdminReviewQueue
      parameters:
        - in: query
          name: lane
          schema:
            oneOf:
              - $ref: '#/components/schemas/Lane'
              - type: array
                items:
                  $ref: '#/components/schemas/Lane'
        - in: query
          name: status
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - in: query
          name: assignee
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - in: query
          name: priority
          schema:
            oneOf:
              - $ref: '#/components/schemas/Priority'
              - type: array
                items:
                  $ref: '#/components/schemas/Priority'
        - in: query
          name: hasDFM
          schema:
            type: boolean
        - in: query
          name: search
          schema:
            type: string
            maxLength: 128
        - in: query
          name: dateFrom
          schema:
            type: string
            format: date-time
        - in: query
          name: dateTo
          schema:
            type: string
            format: date-time
        - in: query
          name: minValue
          schema:
            type: number
            minimum: 0
        - in: query
          name: maxValue
          schema:
            type: number
            minimum: 0
        - in: query
          name: sort
          schema:
            type: string
            enum: [createdAt, totalValue, dfmFindingCount, priority, lastActionAt]
        - in: query
          name: order
          schema:
            type: string
            enum: [asc, desc]
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
        - in: query
          name: cursor
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '429':
          $ref: '#/components/responses/RateLimited'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/admin/review/{quoteId}:
    get:
      summary: Get review detail and workspace
      operationId: getAdminReviewDetail
      parameters:
        - in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReviewDetailResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Quote not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/admin/review/export.csv:
    get:
      summary: Export filtered review queue as CSV
      operationId: exportAdminReviewCsv
      parameters:
        - $ref: '#/components/parameters/Lane'
        - $ref: '#/components/parameters/Status'
        - $ref: '#/components/parameters/Assignee'
        - $ref: '#/components/parameters/Priority'
        - $ref: '#/components/parameters/HasDFM'
        - $ref: '#/components/parameters/Search'
        - $ref: '#/components/parameters/DateFrom'
        - $ref: '#/components/parameters/DateTo'
        - $ref: '#/components/parameters/MinValue'
        - $ref: '#/components/parameters/MaxValue'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Order'
      responses:
        '200':
          description: CSV export
          headers:
            Content-Disposition:
              schema:
                type: string
              description: attachment; filename=review-YYYYMMDD.csv
          content:
            text/csv:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '500':
          $ref: '#/components/responses/InternalError'
components:
  parameters:
    Lane:
      in: query
      name: lane
      schema:
        oneOf:
          - $ref: '#/components/schemas/Lane'
          - type: array
            items:
              $ref: '#/components/schemas/Lane'
    Status:
      in: query
      name: status
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
    Assignee:
      in: query
      name: assignee
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
    Priority:
      in: query
      name: priority
      schema:
        oneOf:
          - $ref: '#/components/schemas/Priority'
          - type: array
            items:
              $ref: '#/components/schemas/Priority'
    HasDFM:
      in: query
      name: hasDFM
      schema:
        type: boolean
    Search:
      in: query
      name: search
      schema:
        type: string
        maxLength: 128
    DateFrom:
      in: query
      name: dateFrom
      schema:
        type: string
        format: date-time
    DateTo:
      in: query
      name: dateTo
      schema:
        type: string
        format: date-time
    MinValue:
      in: query
      name: minValue
      schema:
        type: number
        minimum: 0
    MaxValue:
      in: query
      name: maxValue
      schema:
        type: number
        minimum: 0
    Sort:
      in: query
      name: sort
      schema:
        type: string
        enum: [createdAt, totalValue, dfmFindingCount, priority, lastActionAt]
    Order:
      in: query
      name: order
      schema:
        type: string
        enum: [asc, desc]
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: Insufficient scope or tenant access
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    PayloadTooLarge:
      description: Requested export exceeds hard cap
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    RateLimited:
      description: Rate limited
      headers:
        Retry-After:
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalError:
      description: Server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    Lane:
      type: string
      enum: [NEW, IN_REVIEW, APPROVED, REJECTED]
    Priority:
      type: string
      enum: [LOW, MED, HIGH, EXPEDITE]
    CurrencyCode:
      type: string
      enum: [USD, EUR, GBP, NOK, INR]
    AdminReviewItem:
      type: object
      required:
        - id
        - quoteNo
        - customerName
        - company
        - createdAt
        - submittedBy
        - lane
        - totalItems
        - totalValue
        - currency
        - dfmFindingCount
        - priority
      properties:
        id:
          type: string
        quoteNo:
          type: string
        customerName:
          type: string
        company:
          type: string
        createdAt:
          type: string
          format: date-time
        submittedBy:
          type: string
        lane:
          $ref: '#/components/schemas/Lane'
        statusReason:
          type: string
          nullable: true
        totalItems:
          type: integer
          minimum: 0
        totalValue:
          type: number
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        dfmFindingCount:
          type: integer
          minimum: 0
        priority:
          $ref: '#/components/schemas/Priority'
        assignee:
          type: string
          nullable: true
        lastActionAt:
          type: string
          nullable: true
          format: date-time
    ReviewStats:
      type: object
      required:
        - totalRows
        - totalValue
        - conversionRate
      properties:
        totalRows:
          type: integer
          minimum: 0
        totalValue:
          type: number
        conversionRate:
          type: number
          minimum: 0
    PageMeta:
      type: object
      required:
        - limit
      properties:
        nextCursor:
          type: string
          nullable: true
        limit:
          type: integer
          minimum: 1
        totalApprox:
          type: integer
          nullable: true
    ReviewListResponse:
      type: object
      required:
        - data
        - meta
        - stats
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AdminReviewItem'
        meta:
          $ref: '#/components/schemas/PageMeta'
        stats:
          $ref: '#/components/schemas/ReviewStats'
    ReviewDetailResponse:
      type: object
      required:
        - item
        - workspace
      properties:
        item:
          $ref: '#/components/schemas/AdminReviewItem'
        workspace:
          type: object
          required:
            - dfm
            - pricingSummary
            - activity
            - notes
          properties:
            dfm:
              type: array
              items:
                type: object
                required:
                  - id
                  - severity
                  - rule
                  - message
                  - createdAt
                properties:
                  id:
                    type: string
                  severity:
                    type: string
                    enum: [LOW, MED, HIGH]
                  rule:
                    type: string
                  partId:
                    type: string
                    nullable: true
                  message:
                    type: string
                  createdAt:
                    type: string
                    format: date-time
            pricingSummary:
              type: object
              required:
                - materialCost
                - machiningCost
                - finishingCost
                - total
                - currency
              properties:
                materialCost:
                  type: number
                machiningCost:
                  type: number
                finishingCost:
                  type: number
                total:
                  type: number
                currency:
                  $ref: '#/components/schemas/CurrencyCode'
            activity:
              type: array
              items:
                type: object
                required:
                  - id
                  - actor
                  - action
                  - at
                properties:
                  id:
                    type: string
                  actor:
                    type: string
                  action:
                    type: string
                  at:
                    type: string
                    format: date-time
                  meta:
                    type: object
                    additionalProperties: true
            notes:
              type: array
              items:
                type: object
                required:
                  - id
                  - author
                  - text
                  - at
                properties:
                  id:
                    type: string
                  author:
                    type: string
                  text:
                    type: string
                  at:
                    type: string
                    format: date-time
    ErrorResponse:
      type: object
      required:
        - error
        - code
      properties:
        error:
          type: string
        code:
          type: string
        requestId:
          type: string
        details:
          oneOf:
            - type: object
              additionalProperties: true
            - type: array
              items:
                type: object
                additionalProperties: true
